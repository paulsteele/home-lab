---
- hosts: all
  become: true
  vars:
    os: Debian_11
    clusterVersion: 1.26
    clusterPatchVersion: 1-00
  tasks:
  - name: Install https packages for apt
    apt:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
  - name: Add an apt signing key for cri-o stable
    apt_key:
      url: "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{ os }}/Release.key"
      state: present
  - name: Add an apt signing key for cri-o version
    apt_key:
      url: "https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:{{ clusterVersion }}/{{ os }}/Release.key"
      state: present
  - name: Add apt repository for cri-o stable
    apt_repository:
      repo: "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{ os }}/ /" 
      state: present
  - name: Add apt repository for cri-o version
    apt_repository:
      repo: "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/{{ clusterVersion }}/{{ os }}/ /"
      state: present
  - name: Install cri-o and its dependencies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - cri-o
      - cri-o-runc
       
  - name: Enable and run crio
    ansible.builtin.systemd:
      state: started
      enabled: true
      name: crio
      
  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet={{ clusterVersion }}.{{ clusterPatchVersion }}
        - kubeadm={{ clusterVersion }}.{{ clusterPatchVersion }}
        - kubectl={{ clusterVersion }}.{{ clusterPatchVersion }}

  - name: Hold packages
    ansible.builtin.dpkg_selections:
      name: "{{ item }}"
      selection: hold
    loop:
      - cri-o
      - cri-o-runc
      - kubelet
      - kubeadm
      - kubectl

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted
        
